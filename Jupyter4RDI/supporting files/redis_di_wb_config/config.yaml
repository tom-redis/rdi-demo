connections:
  mysql:
    type: mysql
    host: mysql
    port: 3306
    database: inventory
    user: root
    password: redislabs
    #connect_args:
    # ssl_ca: /opt/ssl/ca.crt
    # ssl_cert: /opt/ssl/client.crt
    # ssl_key: /opt/ssl/client.key
applier:
  # Interval (in seconds) on which to perform retry on failure
  #on_failed_retry_interval: 5
  # The batch size for reading data from source database
  #read_batch_size: 2000
  # Time (in ms) after which data will be read from stream even if read_batch_size was not reached
  #duration: 100
  # The batch size for writing data to target Redis database. Should be less or equal to the read_batch_size
  #write_batch_size: 200
  # Enable deduplication mechanism (default: false)
  #dedup: <DEDUP_ENABLED>
  # Max size of the deduplication set (default: 1024)
  #dedup_max_size: <DEDUP_MAX_SIZE>
  # Deduplication strategy: reject - reject messages(dlq), ignore - ignore messages (default: ignore)
  #dedup_strategy: ignore
  # Error handling strategy: ignore - skip, dlq - store rejected messages in a dead letter queue
  #error_handling: dlq
  # Dead letter queue max messages per stream
  #dlq_max_messages: 1000
  # Target data type: hash/json - RedisJSON module must be in use in the target DB
  #target_data_type: hash
  # Number of processes to use when syncing initial data
  #initial_sync_processes: 4
  # Checks if the batch has been written to the replica shard
  #wait_enabled: false
  # Timeout in milliseconds when checking write to the replica shard
  #wait_timeout: 1000
  # Ensures that a batch has been written to the replica shard and keeps retrying if not
  #retry_on_replica_failure: true